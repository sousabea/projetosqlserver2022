/*	JUNÇÕES, UNIÕES E VISÕES
		Tipos de junções: INNER JOIN, LEFT JOIN, RIGHT JOIN, FULL JOIN, CROSS JOIN
		União de consultas: UNION, UNION ALL
		Subconsultas no comando IN, HAVING (sub query)
		Criação de Visão: VIEW

*/


--Junção (INNER JOIN) de tabelas durante a seleção

SELECT MATRICULA, COUNT (*) AS NUMERO_NOTAS FROM NOTAS_FISCAIS GROUP BY MATRICULA;

SELECT NOTAS_FISCAIS.MATRICULA, NOME, COUNT (*) AS NUMERO_NOTAS 
FROM NOTAS_FISCAIS 
INNER JOIN TABELA_DE_VENDEDORES
ON NOTAS_FISCAIS.MATRICULA = TABELA_DE_VENDEDORES.MATRICULA
GROUP BY NOTAS_FISCAIS.MATRICULA, TABELA_DE_VENDEDORES.NOME;

SELECT NF.MATRICULA, NOME, COUNT (*) AS NUMERO_NOTAS 
FROM NOTAS_FISCAIS NF
INNER JOIN TABELA_DE_VENDEDORES TV
ON NF.MATRICULA = TV.MATRICULA
GROUP BY NF.MATRICULA, TV.NOME;

SELECT NF.MATRICULA, NOME, COUNT (*) AS NUMERO_NOTAS 
FROM TABELA_DE_VENDEDORES TV
INNER JOIN NOTAS_FISCAIS NF
ON NF.MATRICULA = TV.MATRICULA
GROUP BY NF.MATRICULA, TV.NOME;

SELECT INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO, SUM(INF.QUANTIDADE) AS QUANTIDADE 
FROM ITENS_NOTAS_FISCAIS  INF
INNER JOIN TABELA_DE_PRODUTOS TP 
ON INF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
GROUP BY INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO HAVING SUM(INF.QUANTIDADE) > 394000 
ORDER BY SUM(INF.QUANTIDADE) DESC;


--Outros tipos de junções (LEFT JOIN, RIGHT JOIN, FULL JOIN, CROSS JOIN)

SELECT TE.NOME, TD.HOBBY
FROM TABELA_ESQUERDA TE
INNER JOIN TABELA_DIREITA TD
ON TE.IDENTIFICADOR = TD.IDENTIFICADOR;

SELECT TE.NOME, TD.HOBBY
FROM TABELA_ESQUERDA TE
LEFT JOIN TABELA_DIREITA TD
ON TE.IDENTIFICADOR = TD.IDENTIFICADOR;

SELECT TE.NOME, TD.HOBBY
FROM TABELA_ESQUERDA TE
RIGHT JOIN TABELA_DIREITA TD
ON TE.IDENTIFICADOR = TD.IDENTIFICADOR;

SELECT TE.NOME, TD.HOBBY
FROM TABELA_ESQUERDA TE
FULL JOIN TABELA_DIREITA TD
ON TE.IDENTIFICADOR = TD.IDENTIFICADOR;

SELECT TE.NOME, TD.HOBBY
FROM TABELA_ESQUERDA TE
CROSS JOIN TABELA_DIREITA TD;


SELECT DISTINCT 
TC.CPF AS CPF_DO_CADASTRO
, TC.NOME AS NOME_DO_CLIENTE
, NF.CPF AS CPF_DA_NOTA
FROM TABELA_DE_CLIENTES TC
INNER JOIN 
NOTAS_FISCAIS NF
ON TC.CPF = NF.CPF;

SELECT COUNT(*) FROM TABELA_DE_CLIENTES;

INSERT INTO TABELA_DE_CLIENTES
(CPF, NOME, ENDERECO_1,ENDERECO_2, BAIRRO, CIDADE, ESTADO, CEP, DATA_DE_NASCIMENTO, IDADE, GENERO, LIMITE_DE_CREDITO,
VOLUME_DE_COMPRA, PRIMEIRA_COMPRA)
VALUES ('25225252525', 'Juliana Silva', 'R, Tramandai', '', 'Bangu', 'Rio de Janeiro', 'RJ', '23400000', '1989-02-04',
33, 'F', 180000, 24500, 0);

SELECT DISTINCT 
TC.CPF AS CPF_DO_CADASTRO
, TC.NOME AS NOME_DO_CLIENTE
FROM TABELA_DE_CLIENTES TC
LEFT JOIN 
NOTAS_FISCAIS NF
ON TC.CPF = NF.CPF
WHERE NF.CPF IS NULL;

SELECT DISTINCT
TV.NOME AS NOME_DO_VENDEDOR
, TV.BAIRRO AS BAIRRO_DO_VENDEDOR
, TC.NOME AS NOME_DO_CLIENTE
, TC.BAIRRO AS BAIRRO_DO_CLIENTE
FROM
TABELA_DE_CLIENTES TC
INNER JOIN
TABELA_DE_VENDEDORES TV
ON TC.BAIRRO = TV.BAIRRO;

SELECT DISTINCT
TV.NOME AS NOME_DO_VENDEDOR
, TV.BAIRRO AS BAIRRO_DO_VENDEDOR
, TC.NOME AS NOME_DO_CLIENTE
, TC.BAIRRO AS BAIRRO_DO_CLIENTE
FROM
TABELA_DE_CLIENTES TC
RIGHT JOIN
TABELA_DE_VENDEDORES TV
ON TC.BAIRRO = TV.BAIRRO;

SELECT DISTINCT
TV.NOME AS NOME_DO_VENDEDOR
, TV.BAIRRO AS BAIRRO_DO_VENDEDOR
, TC.NOME AS NOME_DO_CLIENTE
, TC.BAIRRO AS BAIRRO_DO_CLIENTE
FROM
TABELA_DE_CLIENTES TC
RIGHT JOIN
TABELA_DE_VENDEDORES TV
ON TC.BAIRRO = TV.BAIRRO
WHERE TC.NOME IS NULL;

SELECT DISTINCT
TV.NOME AS NOME_DO_VENDEDOR
, TV.BAIRRO AS BAIRRO_DO_VENDEDOR
, TC.NOME AS NOME_DO_CLIENTE
, TC.BAIRRO AS BAIRRO_DO_CLIENTE
FROM
TABELA_DE_CLIENTES TC
LEFT JOIN
TABELA_DE_VENDEDORES TV
ON TC.BAIRRO = TV.BAIRRO
WHERE TV.NOME IS NULL;

SELECT DISTINCT
TV.NOME AS NOME_DO_VENDEDOR
, TV.BAIRRO AS BAIRRO_DO_VENDEDOR
, TC.NOME AS NOME_DO_CLIENTE
, TC.BAIRRO AS BAIRRO_DO_CLIENTE
FROM
TABELA_DE_CLIENTES TC
FULL JOIN
TABELA_DE_VENDEDORES TV
ON TC.BAIRRO = TV.BAIRRO;



--Unindo as consultas

SELECT DISTINCT BAIRRO FROM TABELA_DE_CLIENTES
UNION
SELECT DISTINCT BAIRRO FROM TABELA_DE_VENDEDORES;

SELECT DISTINCT BAIRRO FROM TABELA_DE_CLIENTES
UNION ALL
SELECT DISTINCT BAIRRO FROM TABELA_DE_VENDEDORES;

SELECT DISTINCT BAIRRO, 'CLIENTE' AS ORIGEM FROM TABELA_DE_CLIENTES
UNION ALL
SELECT DISTINCT BAIRRO, 'FORNECEDOR' AS ORIGEM FROM TABELA_DE_VENDEDORES;



--Subconsultas no comando IN

SELECT * FROM TABELA_DE_CLIENTES
WHERE BAIRRO IN ('Copacabana', 'Jardins', 'Santo Amaro', 'Tijuca');

SELECT * FROM TABELA_DE_CLIENTES
WHERE BAIRRO IN (SELECT DISTINCT BAIRRO FROM TABELA_DE_VENDEDORES);


SELECT DISTINCT SABOR FROM TABELA_DE_PRODUTOS WHERE
CODIGO_DO_PRODUTO IN (
SELECT INF.CODIGO_DO_PRODUTO FROM ITENS_NOTAS_FISCAIS  INF
INNER JOIN TABELA_DE_PRODUTOS TP 
ON INF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
GROUP BY INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO HAVING SUM(INF.QUANTIDADE) > 394000 );



--Subconsultas substituindo o HAVING

SELECT EMBALAGEM, AVG(PRECO_DE_LISTA) AS PRECO_MEDIO
FROM TABELA_DE_PRODUTOS GROUP BY EMBALAGEM;

SELECT EMBALAGEM, AVG(PRECO_DE_LISTA) AS PRECO_MEDIO
FROM TABELA_DE_PRODUTOS GROUP BY EMBALAGEM
HAVING AVG(PRECO_DE_LISTA) <=10;

SELECT MEDIA_EMBALAGENS.EMBALAGEM,
MEDIA_EMBALAGENS.PRECO_MEDIO FROM 
(SELECT EMBALAGEM, AVG(PRECO_DE_LISTA) AS PRECO_MEDIO
FROM TABELA_DE_PRODUTOS GROUP BY EMBALAGEM) MEDIA_EMBALAGENS
WHERE MEDIA_EMBALAGENS.PRECO_MEDIO <=10;

SELECT SC.CODIGO_DO_PRODUTO, SC.NOME_DO_PRODUTO, SC.QUANTIDADE_TOTAL
FROM
(SELECT INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO, SUM(INF.QUANTIDADE) AS QUANTIDADE_TOTAL FROM ITENS_NOTAS_FISCAIS  INF
INNER JOIN TABELA_DE_PRODUTOS TP 
ON INF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
GROUP BY INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO) SC
WHERE SC.QUANTIDADE_TOTAL > 394000 
ORDER BY SC.QUANTIDADE_TOTAL DESC;


--Visão

SELECT MEDIA_EMBALAGENS.EMBALAGEM,
MEDIA_EMBALAGENS.PRECO_MEDIO FROM 
(SELECT EMBALAGEM, AVG(PRECO_DE_LISTA) AS PRECO_MEDIO
FROM TABELA_DE_PRODUTOS GROUP BY EMBALAGEM) MEDIA_EMBALAGENS
WHERE MEDIA_EMBALAGENS.PRECO_MEDIO <=10;

CREATE VIEW MEDIA_EMBALAGENS AS 
SELECT EMBALAGEM, AVG(PRECO_DE_LISTA) AS PRECO_MEDIO
FROM TABELA_DE_PRODUTOS GROUP BY EMBALAGEM;

SELECT EMBALAGEM, PRECO_MEDIO
FROM MEDIA_EMBALAGENS
WHERE PRECO_MEDIO <=10;


CREATE VIEW VW_QUANTIDADE_PRODUTOS AS SELECT INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO, 
SUM(INF.QUANTIDADE) AS QUANTIDADE_TOTAL FROM ITENS_NOTAS_FISCAIS  INF
INNER JOIN TABELA_DE_PRODUTOS TP 
ON INF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
GROUP BY INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO;

SELECT * FROM VW_QUANTIDADE_PRODUTOS
WHERE QUANTIDADE_TOTAL > 394000 
ORDER BY QUANTIDADE_TOTAL DESC;